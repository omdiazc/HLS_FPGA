// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _leading_one_HH_
#define _leading_one_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct leading_one : public sc_module {
    // Port declarations 2
    sc_in< sc_lv<9> > a_V;
    sc_out< sc_lv<5> > ap_return;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    leading_one(sc_module_name name);
    SC_HAS_PROCESS(leading_one);

    ~leading_one();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > tmp_3_fu_94_p3;
    sc_signal< sc_lv<1> > tmp_4_fu_108_p3;
    sc_signal< sc_lv<1> > tmp_5_fu_122_p3;
    sc_signal< sc_lv<1> > tmp_6_fu_136_p3;
    sc_signal< sc_lv<1> > trunc_ln48_fu_150_p1;
    sc_signal< sc_lv<1> > xor_ln48_fu_154_p2;
    sc_signal< sc_lv<2> > tmp_fu_168_p4;
    sc_signal< sc_lv<9> > and_ln_fu_178_p3;
    sc_signal< sc_lv<1> > tmp_2_fu_86_p3;
    sc_signal< sc_lv<1> > tmp_1_fu_78_p3;
    sc_signal< sc_lv<1> > or_ln1054_7_fu_192_p2;
    sc_signal< sc_lv<1> > xor_ln1054_4_fu_198_p2;
    sc_signal< sc_lv<1> > xor_ln1054_fu_102_p2;
    sc_signal< sc_lv<1> > and_ln1054_1_fu_210_p2;
    sc_signal< sc_lv<1> > xor_ln1054_1_fu_116_p2;
    sc_signal< sc_lv<1> > and_ln1054_3_fu_222_p2;
    sc_signal< sc_lv<1> > xor_ln1054_2_fu_130_p2;
    sc_signal< sc_lv<1> > and_ln1054_5_fu_234_p2;
    sc_signal< sc_lv<1> > xor_ln1054_3_fu_144_p2;
    sc_signal< sc_lv<1> > and_ln1054_7_fu_246_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_252_p3;
    sc_signal< sc_lv<2> > tmp_8_fu_266_p4;
    sc_signal< sc_lv<1> > icmp_ln1054_1_fu_276_p2;
    sc_signal< sc_lv<1> > and_ln1054_9_fu_282_p2;
    sc_signal< sc_lv<3> > select_ln48_fu_160_p3;
    sc_signal< sc_lv<3> > select_ln1054_fu_288_p3;
    sc_signal< sc_lv<1> > and_ln1054_8_fu_260_p2;
    sc_signal< sc_lv<1> > and_ln1054_6_fu_240_p2;
    sc_signal< sc_lv<1> > and_ln1054_4_fu_228_p2;
    sc_signal< sc_lv<1> > and_ln1054_2_fu_216_p2;
    sc_signal< sc_lv<1> > and_ln1054_fu_204_p2;
    sc_signal< sc_lv<1> > icmp_ln1054_fu_186_p2;
    sc_signal< sc_lv<1> > or_ln1054_fu_300_p2;
    sc_signal< sc_lv<4> > sext_ln1054_fu_296_p1;
    sc_signal< sc_lv<4> > select_ln1054_1_fu_306_p3;
    sc_signal< sc_lv<4> > select_ln1054_4_fu_348_p3;
    sc_signal< sc_lv<1> > or_ln1054_1_fu_314_p2;
    sc_signal< sc_lv<1> > or_ln1054_2_fu_328_p2;
    sc_signal< sc_lv<4> > select_ln1054_2_fu_320_p3;
    sc_signal< sc_lv<4> > select_ln1054_3_fu_334_p3;
    sc_signal< sc_lv<4> > select_ln1054_5_fu_366_p3;
    sc_signal< sc_lv<1> > or_ln1054_3_fu_342_p2;
    sc_signal< sc_lv<1> > or_ln1054_4_fu_360_p2;
    sc_signal< sc_lv<5> > sext_ln1054_1_fu_356_p1;
    sc_signal< sc_lv<5> > zext_ln1054_fu_374_p1;
    sc_signal< sc_lv<1> > or_ln1054_5_fu_378_p2;
    sc_signal< sc_lv<1> > or_ln1054_6_fu_392_p2;
    sc_signal< sc_lv<5> > select_ln1054_6_fu_384_p3;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<9> ap_const_lv9_80;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_and_ln1054_1_fu_210_p2();
    void thread_and_ln1054_2_fu_216_p2();
    void thread_and_ln1054_3_fu_222_p2();
    void thread_and_ln1054_4_fu_228_p2();
    void thread_and_ln1054_5_fu_234_p2();
    void thread_and_ln1054_6_fu_240_p2();
    void thread_and_ln1054_7_fu_246_p2();
    void thread_and_ln1054_8_fu_260_p2();
    void thread_and_ln1054_9_fu_282_p2();
    void thread_and_ln1054_fu_204_p2();
    void thread_and_ln_fu_178_p3();
    void thread_ap_return();
    void thread_icmp_ln1054_1_fu_276_p2();
    void thread_icmp_ln1054_fu_186_p2();
    void thread_or_ln1054_1_fu_314_p2();
    void thread_or_ln1054_2_fu_328_p2();
    void thread_or_ln1054_3_fu_342_p2();
    void thread_or_ln1054_4_fu_360_p2();
    void thread_or_ln1054_5_fu_378_p2();
    void thread_or_ln1054_6_fu_392_p2();
    void thread_or_ln1054_7_fu_192_p2();
    void thread_or_ln1054_fu_300_p2();
    void thread_select_ln1054_1_fu_306_p3();
    void thread_select_ln1054_2_fu_320_p3();
    void thread_select_ln1054_3_fu_334_p3();
    void thread_select_ln1054_4_fu_348_p3();
    void thread_select_ln1054_5_fu_366_p3();
    void thread_select_ln1054_6_fu_384_p3();
    void thread_select_ln1054_fu_288_p3();
    void thread_select_ln48_fu_160_p3();
    void thread_sext_ln1054_1_fu_356_p1();
    void thread_sext_ln1054_fu_296_p1();
    void thread_tmp_1_fu_78_p3();
    void thread_tmp_2_fu_86_p3();
    void thread_tmp_3_fu_94_p3();
    void thread_tmp_4_fu_108_p3();
    void thread_tmp_5_fu_122_p3();
    void thread_tmp_6_fu_136_p3();
    void thread_tmp_7_fu_252_p3();
    void thread_tmp_8_fu_266_p4();
    void thread_tmp_fu_168_p4();
    void thread_trunc_ln48_fu_150_p1();
    void thread_xor_ln1054_1_fu_116_p2();
    void thread_xor_ln1054_2_fu_130_p2();
    void thread_xor_ln1054_3_fu_144_p2();
    void thread_xor_ln1054_4_fu_198_p2();
    void thread_xor_ln1054_fu_102_p2();
    void thread_xor_ln48_fu_154_p2();
    void thread_zext_ln1054_fu_374_p1();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
