-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity leading_one is
port (
    a_V : IN STD_LOGIC_VECTOR (8 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (4 downto 0) );
end;


architecture behav of leading_one is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "leading_one,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.046000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=103,HLS_VERSION=2020_1}";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_3_fu_94_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_108_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_122_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_136_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln48_fu_150_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln48_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_168_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln_fu_178_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_86_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_78_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1054_7_fu_192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_4_fu_198_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_1_fu_210_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_1_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_3_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_2_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_5_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1054_3_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_7_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_266_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1054_1_fu_276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_9_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln48_fu_160_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln1054_fu_288_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln1054_8_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_6_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_4_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_2_fu_216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1054_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1054_fu_186_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1054_fu_300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1054_fu_296_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1054_1_fu_306_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1054_4_fu_348_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln1054_1_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1054_2_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1054_2_fu_320_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1054_3_fu_334_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1054_5_fu_366_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln1054_3_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1054_4_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1054_1_fu_356_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln1054_fu_374_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln1054_5_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1054_6_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1054_6_fu_384_p3 : STD_LOGIC_VECTOR (4 downto 0);


begin



    and_ln1054_1_fu_210_p2 <= (xor_ln1054_fu_102_p2 and xor_ln1054_4_fu_198_p2);
    and_ln1054_2_fu_216_p2 <= (tmp_4_fu_108_p3 and and_ln1054_1_fu_210_p2);
    and_ln1054_3_fu_222_p2 <= (xor_ln1054_1_fu_116_p2 and and_ln1054_1_fu_210_p2);
    and_ln1054_4_fu_228_p2 <= (tmp_5_fu_122_p3 and and_ln1054_3_fu_222_p2);
    and_ln1054_5_fu_234_p2 <= (xor_ln1054_2_fu_130_p2 and and_ln1054_3_fu_222_p2);
    and_ln1054_6_fu_240_p2 <= (tmp_6_fu_136_p3 and and_ln1054_5_fu_234_p2);
    and_ln1054_7_fu_246_p2 <= (xor_ln1054_3_fu_144_p2 and and_ln1054_5_fu_234_p2);
    and_ln1054_8_fu_260_p2 <= (tmp_7_fu_252_p3 and and_ln1054_7_fu_246_p2);
    and_ln1054_9_fu_282_p2 <= (icmp_ln1054_1_fu_276_p2 and and_ln1054_7_fu_246_p2);
    and_ln1054_fu_204_p2 <= (xor_ln1054_4_fu_198_p2 and tmp_3_fu_94_p3);
    and_ln_fu_178_p3 <= (tmp_fu_168_p4 & ap_const_lv7_0);
    ap_return <= 
        select_ln1054_6_fu_384_p3 when (or_ln1054_6_fu_392_p2(0) = '1') else 
        ap_const_lv5_1;
    icmp_ln1054_1_fu_276_p2 <= "1" when (tmp_8_fu_266_p4 = ap_const_lv2_0) else "0";
    icmp_ln1054_fu_186_p2 <= "1" when (and_ln_fu_178_p3 = ap_const_lv9_80) else "0";
    or_ln1054_1_fu_314_p2 <= (and_ln1054_6_fu_240_p2 or and_ln1054_4_fu_228_p2);
    or_ln1054_2_fu_328_p2 <= (and_ln1054_fu_204_p2 or and_ln1054_2_fu_216_p2);
    or_ln1054_3_fu_342_p2 <= (tmp_1_fu_78_p3 or icmp_ln1054_fu_186_p2);
    or_ln1054_4_fu_360_p2 <= (or_ln1054_fu_300_p2 or or_ln1054_1_fu_314_p2);
    or_ln1054_5_fu_378_p2 <= (or_ln1054_3_fu_342_p2 or or_ln1054_2_fu_328_p2);
    or_ln1054_6_fu_392_p2 <= (or_ln1054_5_fu_378_p2 or or_ln1054_4_fu_360_p2);
    or_ln1054_7_fu_192_p2 <= (tmp_2_fu_86_p3 or tmp_1_fu_78_p3);
    or_ln1054_fu_300_p2 <= (and_ln1054_9_fu_282_p2 or and_ln1054_8_fu_260_p2);
    select_ln1054_1_fu_306_p3 <= 
        ap_const_lv4_3 when (and_ln1054_6_fu_240_p2(0) = '1') else 
        ap_const_lv4_4;
    select_ln1054_2_fu_320_p3 <= 
        ap_const_lv4_5 when (and_ln1054_2_fu_216_p2(0) = '1') else 
        ap_const_lv4_6;
    select_ln1054_3_fu_334_p3 <= 
        ap_const_lv4_7 when (icmp_ln1054_fu_186_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln1054_4_fu_348_p3 <= 
        sext_ln1054_fu_296_p1 when (or_ln1054_fu_300_p2(0) = '1') else 
        select_ln1054_1_fu_306_p3;
    select_ln1054_5_fu_366_p3 <= 
        select_ln1054_2_fu_320_p3 when (or_ln1054_2_fu_328_p2(0) = '1') else 
        select_ln1054_3_fu_334_p3;
    select_ln1054_6_fu_384_p3 <= 
        sext_ln1054_1_fu_356_p1 when (or_ln1054_4_fu_360_p2(0) = '1') else 
        zext_ln1054_fu_374_p1;
    select_ln1054_fu_288_p3 <= 
        select_ln48_fu_160_p3 when (and_ln1054_9_fu_282_p2(0) = '1') else 
        ap_const_lv3_2;
    select_ln48_fu_160_p3 <= 
        ap_const_lv3_7 when (xor_ln48_fu_154_p2(0) = '1') else 
        ap_const_lv3_0;
        sext_ln1054_1_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1054_4_fu_348_p3),5));

        sext_ln1054_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1054_fu_288_p3),4));

    tmp_1_fu_78_p3 <= a_V(8 downto 8);
    tmp_2_fu_86_p3 <= a_V(7 downto 7);
    tmp_3_fu_94_p3 <= a_V(6 downto 6);
    tmp_4_fu_108_p3 <= a_V(5 downto 5);
    tmp_5_fu_122_p3 <= a_V(4 downto 4);
    tmp_6_fu_136_p3 <= a_V(3 downto 3);
    tmp_7_fu_252_p3 <= a_V(2 downto 2);
    tmp_8_fu_266_p4 <= a_V(2 downto 1);
    tmp_fu_168_p4 <= a_V(8 downto 7);
    trunc_ln48_fu_150_p1 <= a_V(1 - 1 downto 0);
    xor_ln1054_1_fu_116_p2 <= (tmp_4_fu_108_p3 xor ap_const_lv1_1);
    xor_ln1054_2_fu_130_p2 <= (tmp_5_fu_122_p3 xor ap_const_lv1_1);
    xor_ln1054_3_fu_144_p2 <= (tmp_6_fu_136_p3 xor ap_const_lv1_1);
    xor_ln1054_4_fu_198_p2 <= (or_ln1054_7_fu_192_p2 xor ap_const_lv1_1);
    xor_ln1054_fu_102_p2 <= (tmp_3_fu_94_p3 xor ap_const_lv1_1);
    xor_ln48_fu_154_p2 <= (trunc_ln48_fu_150_p1 xor ap_const_lv1_1);
    zext_ln1054_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1054_5_fu_366_p3),5));
end behav;
