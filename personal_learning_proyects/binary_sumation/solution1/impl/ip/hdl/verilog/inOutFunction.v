// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="inOutFunction,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.633250,HLS_SYN_LAT=4048,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=5,HLS_SYN_FF=1478,HLS_SYN_LUT=1456,HLS_VERSION=2020_1}" *)

module inOutFunction (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        digit,
        digit_ap_vld,
        anode,
        anode_ap_vld,
        firstNumber,
        secondNumber
);

parameter    ap_ST_fsm_state1 = 41'd1;
parameter    ap_ST_fsm_state2 = 41'd2;
parameter    ap_ST_fsm_state3 = 41'd4;
parameter    ap_ST_fsm_state4 = 41'd8;
parameter    ap_ST_fsm_state5 = 41'd16;
parameter    ap_ST_fsm_state6 = 41'd32;
parameter    ap_ST_fsm_state7 = 41'd64;
parameter    ap_ST_fsm_state8 = 41'd128;
parameter    ap_ST_fsm_state9 = 41'd256;
parameter    ap_ST_fsm_state10 = 41'd512;
parameter    ap_ST_fsm_state11 = 41'd1024;
parameter    ap_ST_fsm_state12 = 41'd2048;
parameter    ap_ST_fsm_state13 = 41'd4096;
parameter    ap_ST_fsm_state14 = 41'd8192;
parameter    ap_ST_fsm_state15 = 41'd16384;
parameter    ap_ST_fsm_state16 = 41'd32768;
parameter    ap_ST_fsm_state17 = 41'd65536;
parameter    ap_ST_fsm_state18 = 41'd131072;
parameter    ap_ST_fsm_state19 = 41'd262144;
parameter    ap_ST_fsm_state20 = 41'd524288;
parameter    ap_ST_fsm_state21 = 41'd1048576;
parameter    ap_ST_fsm_state22 = 41'd2097152;
parameter    ap_ST_fsm_state23 = 41'd4194304;
parameter    ap_ST_fsm_state24 = 41'd8388608;
parameter    ap_ST_fsm_state25 = 41'd16777216;
parameter    ap_ST_fsm_state26 = 41'd33554432;
parameter    ap_ST_fsm_state27 = 41'd67108864;
parameter    ap_ST_fsm_state28 = 41'd134217728;
parameter    ap_ST_fsm_state29 = 41'd268435456;
parameter    ap_ST_fsm_state30 = 41'd536870912;
parameter    ap_ST_fsm_state31 = 41'd1073741824;
parameter    ap_ST_fsm_state32 = 41'd2147483648;
parameter    ap_ST_fsm_state33 = 41'd4294967296;
parameter    ap_ST_fsm_state34 = 41'd8589934592;
parameter    ap_ST_fsm_state35 = 41'd17179869184;
parameter    ap_ST_fsm_state36 = 41'd34359738368;
parameter    ap_ST_fsm_state37 = 41'd68719476736;
parameter    ap_ST_fsm_state38 = 41'd137438953472;
parameter    ap_ST_fsm_state39 = 41'd274877906944;
parameter    ap_ST_fsm_state40 = 41'd549755813888;
parameter    ap_ST_fsm_state41 = 41'd1099511627776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] digit;
output   digit_ap_vld;
output  [7:0] anode;
output   anode_ap_vld;
input  [31:0] firstNumber;
input  [31:0] secondNumber;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] digit;
reg digit_ap_vld;
reg[7:0] anode;
reg anode_ap_vld;

(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] sevenSegmentNumbers_address0;
reg    sevenSegmentNumbers_ce0;
wire   [6:0] sevenSegmentNumbers_q0;
wire  signed [31:0] add_ln66_fu_171_p2;
reg  signed [31:0] add_ln66_reg_454;
reg   [0:0] tmp_11_reg_462;
wire   [64:0] mul_ln52_fu_204_p2;
reg   [64:0] mul_ln52_reg_468;
wire    ap_CS_fsm_state2;
reg   [22:0] tmp_13_reg_473;
wire   [31:0] select_ln52_1_fu_255_p3;
reg   [31:0] select_ln52_1_reg_478;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [6:0] sevenSegmentNumbers_7_reg_488;
wire    ap_CS_fsm_state5;
wire   [7:0] trunc_ln42_fu_266_p1;
reg   [7:0] trunc_ln42_reg_493;
wire    ap_CS_fsm_state36;
reg   [0:0] tmp_6_reg_498;
wire    ap_CS_fsm_state37;
wire    grp_delay_fu_165_ap_ready;
wire    grp_delay_fu_165_ap_done;
wire   [16:0] trunc_ln42_1_fu_292_p1;
reg   [16:0] trunc_ln42_1_reg_509;
reg   [5:0] tmp_reg_514;
wire   [10:0] trunc_ln47_fu_306_p1;
reg  signed [10:0] trunc_ln47_reg_519;
reg   [0:0] tmp_8_reg_524;
wire    ap_CS_fsm_state38;
wire   [22:0] trunc_ln47_1_fu_373_p1;
reg   [22:0] trunc_ln47_1_reg_535;
reg   [5:0] tmp_10_reg_540;
wire    ap_CS_fsm_state39;
wire    grp_delay_fu_165_ap_start;
wire    grp_delay_fu_165_ap_idle;
reg    grp_delay_fu_165_ap_start_reg;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state41;
wire  signed [63:0] sext_ln52_fu_262_p1;
wire  signed [63:0] sext_ln36_fu_278_p1;
wire  signed [63:0] sext_ln42_fu_365_p1;
wire  signed [63:0] sext_ln47_fu_432_p1;
wire   [7:0] zext_ln36_fu_318_p1;
wire   [7:0] zext_ln42_fu_385_p1;
wire   [7:0] zext_ln47_fu_437_p1;
wire   [7:0] zext_ln52_fu_442_p1;
wire   [7:0] grp_fu_177_p1;
wire   [4:0] grp_fu_191_p1;
wire   [10:0] grp_fu_196_p1;
wire  signed [31:0] mul_ln52_fu_204_p1;
wire   [64:0] sub_ln52_fu_220_p2;
wire   [22:0] tmp_12_fu_225_p4;
wire  signed [31:0] sext_ln52_2_fu_235_p1;
wire  signed [31:0] sext_ln52_3_fu_239_p1;
wire   [31:0] select_ln52_fu_242_p3;
wire   [31:0] sub_ln52_1_fu_249_p2;
wire   [31:0] grp_fu_177_p2;
wire   [31:0] grp_fu_191_p2;
wire  signed [7:0] mul_ln42_fu_286_p1;
wire   [17:0] mul_ln42_fu_286_p2;
wire   [31:0] grp_fu_196_p2;
wire   [16:0] sub_ln42_fu_323_p2;
wire   [4:0] tmp_7_fu_328_p4;
wire  signed [7:0] sext_ln42_2_fu_338_p1;
wire  signed [7:0] sext_ln42_3_fu_342_p1;
wire   [7:0] select_ln42_fu_345_p3;
wire   [7:0] sub_ln42_1_fu_352_p2;
wire   [7:0] select_ln42_1_fu_358_p3;
wire  signed [23:0] mul_ln47_fu_446_p2;
wire   [22:0] sub_ln47_fu_390_p2;
wire   [4:0] tmp_9_fu_395_p4;
wire  signed [10:0] sext_ln47_2_fu_405_p1;
wire  signed [10:0] sext_ln47_3_fu_409_p1;
wire   [10:0] select_ln47_fu_412_p3;
wire   [10:0] sub_ln47_1_fu_419_p2;
wire   [10:0] select_ln47_1_fu_425_p3;
wire   [12:0] mul_ln47_fu_446_p0;
reg    grp_fu_177_ap_start;
wire    grp_fu_177_ap_done;
reg    grp_fu_177_ce;
reg    grp_fu_191_ap_start;
wire    grp_fu_191_ap_done;
reg    grp_fu_191_ce;
reg    grp_fu_196_ap_start;
wire    grp_fu_196_ap_done;
reg    grp_fu_196_ce;
reg   [40:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 41'd1;
#0 grp_delay_fu_165_ap_start_reg = 1'b0;
end

inOutFunction_sevbkb #(
    .DataWidth( 7 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
sevenSegmentNumbers_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sevenSegmentNumbers_address0),
    .ce0(sevenSegmentNumbers_ce0),
    .q0(sevenSegmentNumbers_q0)
);

delay grp_delay_fu_165(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_delay_fu_165_ap_start),
    .ap_done(grp_delay_fu_165_ap_done),
    .ap_idle(grp_delay_fu_165_ap_idle),
    .ap_ready(grp_delay_fu_165_ap_ready)
);

inOutFunction_srecud #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
inOutFunction_srecud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_177_ap_start),
    .done(grp_fu_177_ap_done),
    .din0(add_ln66_fu_171_p2),
    .din1(grp_fu_177_p1),
    .ce(grp_fu_177_ce),
    .dout(grp_fu_177_p2)
);

inOutFunction_sredEe #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
inOutFunction_sredEe_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_191_ap_start),
    .done(grp_fu_191_ap_done),
    .din0(add_ln66_reg_454),
    .din1(grp_fu_191_p1),
    .ce(grp_fu_191_ce),
    .dout(grp_fu_191_p2)
);

inOutFunction_sreeOg #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 32 ))
inOutFunction_sreeOg_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_196_ap_start),
    .done(grp_fu_196_ap_done),
    .din0(add_ln66_reg_454),
    .din1(grp_fu_196_p1),
    .ce(grp_fu_196_ce),
    .dout(grp_fu_196_p2)
);

inOutFunction_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 24 ))
inOutFunction_mulfYi_U4(
    .din0(mul_ln47_fu_446_p0),
    .din1(trunc_ln47_reg_519),
    .dout(mul_ln47_fu_446_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_delay_fu_165_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36))) begin
            grp_delay_fu_165_ap_start_reg <= 1'b1;
        end else if ((grp_delay_fu_165_ap_ready == 1'b1)) begin
            grp_delay_fu_165_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln66_reg_454 <= add_ln66_fu_171_p2;
        tmp_11_reg_462 <= add_ln66_fu_171_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln52_reg_468 <= mul_ln52_fu_204_p2;
        tmp_13_reg_473 <= {{mul_ln52_fu_204_p2[64:42]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        select_ln52_1_reg_478 <= select_ln52_1_fu_255_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sevenSegmentNumbers_7_reg_488 <= sevenSegmentNumbers_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        tmp_10_reg_540 <= {{mul_ln47_fu_446_p2[23:18]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_6_reg_498 <= grp_fu_177_p2[32'd7];
        trunc_ln42_reg_493 <= trunc_ln42_fu_266_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (grp_delay_fu_165_ap_done == 1'b1))) begin
        tmp_8_reg_524 <= grp_fu_196_p2[32'd10];
        tmp_reg_514 <= {{mul_ln42_fu_286_p2[17:12]}};
        trunc_ln47_reg_519 <= trunc_ln47_fu_306_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (grp_delay_fu_165_ap_done == 1'b1) & (tmp_6_reg_498 == 1'd1))) begin
        trunc_ln42_1_reg_509 <= trunc_ln42_1_fu_292_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (tmp_8_reg_524 == 1'd1))) begin
        trunc_ln47_1_reg_535 <= trunc_ln47_1_fu_373_p1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) & (grp_delay_fu_165_ap_done == 1'b1))) begin
        anode = 8'd1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        anode = 8'd2;
    end else if (((1'b1 == ap_CS_fsm_state39) & (grp_delay_fu_165_ap_done == 1'b1))) begin
        anode = 8'd4;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        anode = 8'd8;
    end else begin
        anode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state41) & (grp_delay_fu_165_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (grp_delay_fu_165_ap_done == 1'b1)))) begin
        anode_ap_vld = 1'b1;
    end else begin
        anode_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) & (grp_delay_fu_165_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) & (grp_delay_fu_165_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) & (grp_delay_fu_165_ap_done == 1'b1))) begin
        digit = zext_ln52_fu_442_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        digit = zext_ln47_fu_437_p1;
    end else if (((1'b1 == ap_CS_fsm_state39) & (grp_delay_fu_165_ap_done == 1'b1))) begin
        digit = zext_ln42_fu_385_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        digit = zext_ln36_fu_318_p1;
    end else begin
        digit = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state41) & (grp_delay_fu_165_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (grp_delay_fu_165_ap_done == 1'b1)))) begin
        digit_ap_vld = 1'b1;
    end else begin
        digit_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_177_ap_start = 1'b1;
    end else begin
        grp_fu_177_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))) begin
        grp_fu_177_ce = 1'b0;
    end else begin
        grp_fu_177_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_191_ap_start = 1'b1;
    end else begin
        grp_fu_191_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_191_ce = 1'b0;
    end else begin
        grp_fu_191_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_196_ap_start = 1'b1;
    end else begin
        grp_fu_196_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38))) begin
        grp_fu_196_ce = 1'b0;
    end else begin
        grp_fu_196_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        sevenSegmentNumbers_address0 = sext_ln47_fu_432_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        sevenSegmentNumbers_address0 = sext_ln42_fu_365_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        sevenSegmentNumbers_address0 = sext_ln36_fu_278_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sevenSegmentNumbers_address0 = sext_ln52_fu_262_p1;
    end else begin
        sevenSegmentNumbers_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state39) & (grp_delay_fu_165_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state37) & (grp_delay_fu_165_ap_done == 1'b1)))) begin
        sevenSegmentNumbers_ce0 = 1'b1;
    end else begin
        sevenSegmentNumbers_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (grp_delay_fu_165_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (grp_delay_fu_165_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (grp_delay_fu_165_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((1'b1 == ap_CS_fsm_state41) & (grp_delay_fu_165_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln66_fu_171_p2 = (firstNumber + secondNumber);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign grp_delay_fu_165_ap_start = grp_delay_fu_165_ap_start_reg;

assign grp_fu_177_p1 = 32'd100;

assign grp_fu_191_p1 = 32'd10;

assign grp_fu_196_p1 = 32'd1000;

assign mul_ln42_fu_286_p1 = trunc_ln42_reg_493;

assign mul_ln42_fu_286_p2 = ($signed({{1'b0}, {18'd410}}) * $signed(mul_ln42_fu_286_p1));

assign mul_ln47_fu_446_p0 = 24'd2622;

assign mul_ln52_fu_204_p1 = add_ln66_reg_454;

assign mul_ln52_fu_204_p2 = ($signed({{1'b0}, {65'd4398046512}}) * $signed(mul_ln52_fu_204_p1));

assign select_ln42_1_fu_358_p3 = ((tmp_6_reg_498[0:0] === 1'b1) ? sub_ln42_1_fu_352_p2 : sext_ln42_3_fu_342_p1);

assign select_ln42_fu_345_p3 = ((tmp_6_reg_498[0:0] === 1'b1) ? sext_ln42_2_fu_338_p1 : sext_ln42_3_fu_342_p1);

assign select_ln47_1_fu_425_p3 = ((tmp_8_reg_524[0:0] === 1'b1) ? sub_ln47_1_fu_419_p2 : sext_ln47_3_fu_409_p1);

assign select_ln47_fu_412_p3 = ((tmp_8_reg_524[0:0] === 1'b1) ? sext_ln47_2_fu_405_p1 : sext_ln47_3_fu_409_p1);

assign select_ln52_1_fu_255_p3 = ((tmp_11_reg_462[0:0] === 1'b1) ? sub_ln52_1_fu_249_p2 : sext_ln52_3_fu_239_p1);

assign select_ln52_fu_242_p3 = ((tmp_11_reg_462[0:0] === 1'b1) ? sext_ln52_2_fu_235_p1 : sext_ln52_3_fu_239_p1);

assign sext_ln36_fu_278_p1 = $signed(grp_fu_191_p2);

assign sext_ln42_2_fu_338_p1 = $signed(tmp_7_fu_328_p4);

assign sext_ln42_3_fu_342_p1 = $signed(tmp_reg_514);

assign sext_ln42_fu_365_p1 = $signed(select_ln42_1_fu_358_p3);

assign sext_ln47_2_fu_405_p1 = $signed(tmp_9_fu_395_p4);

assign sext_ln47_3_fu_409_p1 = $signed(tmp_10_reg_540);

assign sext_ln47_fu_432_p1 = $signed(select_ln47_1_fu_425_p3);

assign sext_ln52_2_fu_235_p1 = $signed(tmp_12_fu_225_p4);

assign sext_ln52_3_fu_239_p1 = $signed(tmp_13_reg_473);

assign sext_ln52_fu_262_p1 = $signed(select_ln52_1_reg_478);

assign sub_ln42_1_fu_352_p2 = (8'd0 - select_ln42_fu_345_p3);

assign sub_ln42_fu_323_p2 = (17'd0 - trunc_ln42_1_reg_509);

assign sub_ln47_1_fu_419_p2 = (11'd0 - select_ln47_fu_412_p3);

assign sub_ln47_fu_390_p2 = (23'd0 - trunc_ln47_1_reg_535);

assign sub_ln52_1_fu_249_p2 = (32'd0 - select_ln52_fu_242_p3);

assign sub_ln52_fu_220_p2 = (65'd0 - mul_ln52_reg_468);

assign tmp_12_fu_225_p4 = {{sub_ln52_fu_220_p2[64:42]}};

assign tmp_7_fu_328_p4 = {{sub_ln42_fu_323_p2[16:12]}};

assign tmp_9_fu_395_p4 = {{sub_ln47_fu_390_p2[22:18]}};

assign trunc_ln42_1_fu_292_p1 = mul_ln42_fu_286_p2[16:0];

assign trunc_ln42_fu_266_p1 = grp_fu_177_p2[7:0];

assign trunc_ln47_1_fu_373_p1 = mul_ln47_fu_446_p2[22:0];

assign trunc_ln47_fu_306_p1 = grp_fu_196_p2[10:0];

assign zext_ln36_fu_318_p1 = sevenSegmentNumbers_q0;

assign zext_ln42_fu_385_p1 = sevenSegmentNumbers_q0;

assign zext_ln47_fu_437_p1 = sevenSegmentNumbers_q0;

assign zext_ln52_fu_442_p1 = sevenSegmentNumbers_7_reg_488;

endmodule //inOutFunction
