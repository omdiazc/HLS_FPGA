// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "inOutFunction.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic inOutFunction::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic inOutFunction::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<41> inOutFunction::ap_ST_fsm_state1 = "1";
const sc_lv<41> inOutFunction::ap_ST_fsm_state2 = "10";
const sc_lv<41> inOutFunction::ap_ST_fsm_state3 = "100";
const sc_lv<41> inOutFunction::ap_ST_fsm_state4 = "1000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state5 = "10000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state6 = "100000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state7 = "1000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state8 = "10000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state9 = "100000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state10 = "1000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state11 = "10000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state12 = "100000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<41> inOutFunction::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<32> inOutFunction::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> inOutFunction::ap_const_lv32_1 = "1";
const sc_lv<32> inOutFunction::ap_const_lv32_2 = "10";
const sc_lv<32> inOutFunction::ap_const_lv32_3 = "11";
const sc_lv<32> inOutFunction::ap_const_lv32_4 = "100";
const sc_lv<32> inOutFunction::ap_const_lv32_23 = "100011";
const sc_lv<32> inOutFunction::ap_const_lv32_24 = "100100";
const sc_lv<1> inOutFunction::ap_const_lv1_1 = "1";
const sc_lv<32> inOutFunction::ap_const_lv32_25 = "100101";
const sc_lv<32> inOutFunction::ap_const_lv32_26 = "100110";
const sc_lv<32> inOutFunction::ap_const_lv32_21 = "100001";
const sc_lv<32> inOutFunction::ap_const_lv32_27 = "100111";
const sc_lv<32> inOutFunction::ap_const_lv32_22 = "100010";
const sc_lv<32> inOutFunction::ap_const_lv32_28 = "101000";
const sc_lv<8> inOutFunction::ap_const_lv8_8 = "1000";
const sc_lv<8> inOutFunction::ap_const_lv8_4 = "100";
const sc_lv<8> inOutFunction::ap_const_lv8_2 = "10";
const sc_lv<8> inOutFunction::ap_const_lv8_1 = "1";
const sc_lv<32> inOutFunction::ap_const_lv32_64 = "1100100";
const sc_lv<32> inOutFunction::ap_const_lv32_1F = "11111";
const sc_lv<32> inOutFunction::ap_const_lv32_A = "1010";
const sc_lv<32> inOutFunction::ap_const_lv32_3E8 = "1111101000";
const sc_lv<65> inOutFunction::ap_const_lv65_10624DD30 = "100000110001001001101110100110000";
const sc_lv<32> inOutFunction::ap_const_lv32_2A = "101010";
const sc_lv<32> inOutFunction::ap_const_lv32_40 = "1000000";
const sc_lv<65> inOutFunction::ap_const_lv65_0 = "00000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> inOutFunction::ap_const_lv32_7 = "111";
const sc_lv<18> inOutFunction::ap_const_lv18_19A = "110011010";
const sc_lv<32> inOutFunction::ap_const_lv32_C = "1100";
const sc_lv<32> inOutFunction::ap_const_lv32_11 = "10001";
const sc_lv<17> inOutFunction::ap_const_lv17_0 = "00000000000000000";
const sc_lv<32> inOutFunction::ap_const_lv32_10 = "10000";
const sc_lv<8> inOutFunction::ap_const_lv8_0 = "00000000";
const sc_lv<32> inOutFunction::ap_const_lv32_12 = "10010";
const sc_lv<32> inOutFunction::ap_const_lv32_17 = "10111";
const sc_lv<23> inOutFunction::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> inOutFunction::ap_const_lv32_16 = "10110";
const sc_lv<11> inOutFunction::ap_const_lv11_0 = "00000000000";
const sc_lv<24> inOutFunction::ap_const_lv24_A3E = "101000111110";
const bool inOutFunction::ap_const_boolean_1 = true;

inOutFunction::inOutFunction(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sevenSegmentNumbers_U = new inOutFunction_sevbkb("sevenSegmentNumbers_U");
    sevenSegmentNumbers_U->clk(ap_clk);
    sevenSegmentNumbers_U->reset(ap_rst);
    sevenSegmentNumbers_U->address0(sevenSegmentNumbers_address0);
    sevenSegmentNumbers_U->ce0(sevenSegmentNumbers_ce0);
    sevenSegmentNumbers_U->q0(sevenSegmentNumbers_q0);
    grp_delay_fu_165 = new delay("grp_delay_fu_165");
    grp_delay_fu_165->ap_clk(ap_clk);
    grp_delay_fu_165->ap_rst(ap_rst);
    grp_delay_fu_165->ap_start(grp_delay_fu_165_ap_start);
    grp_delay_fu_165->ap_done(grp_delay_fu_165_ap_done);
    grp_delay_fu_165->ap_idle(grp_delay_fu_165_ap_idle);
    grp_delay_fu_165->ap_ready(grp_delay_fu_165_ap_ready);
    inOutFunction_srecud_U1 = new inOutFunction_srecud<1,36,32,8,32>("inOutFunction_srecud_U1");
    inOutFunction_srecud_U1->clk(ap_clk);
    inOutFunction_srecud_U1->reset(ap_rst);
    inOutFunction_srecud_U1->start(grp_fu_177_ap_start);
    inOutFunction_srecud_U1->done(grp_fu_177_ap_done);
    inOutFunction_srecud_U1->din0(add_ln66_fu_171_p2);
    inOutFunction_srecud_U1->din1(grp_fu_177_p1);
    inOutFunction_srecud_U1->ce(grp_fu_177_ce);
    inOutFunction_srecud_U1->dout(grp_fu_177_p2);
    inOutFunction_sredEe_U2 = new inOutFunction_sredEe<1,36,32,5,32>("inOutFunction_sredEe_U2");
    inOutFunction_sredEe_U2->clk(ap_clk);
    inOutFunction_sredEe_U2->reset(ap_rst);
    inOutFunction_sredEe_U2->start(grp_fu_191_ap_start);
    inOutFunction_sredEe_U2->done(grp_fu_191_ap_done);
    inOutFunction_sredEe_U2->din0(add_ln66_reg_454);
    inOutFunction_sredEe_U2->din1(grp_fu_191_p1);
    inOutFunction_sredEe_U2->ce(grp_fu_191_ce);
    inOutFunction_sredEe_U2->dout(grp_fu_191_p2);
    inOutFunction_sreeOg_U3 = new inOutFunction_sreeOg<1,36,32,11,32>("inOutFunction_sreeOg_U3");
    inOutFunction_sreeOg_U3->clk(ap_clk);
    inOutFunction_sreeOg_U3->reset(ap_rst);
    inOutFunction_sreeOg_U3->start(grp_fu_196_ap_start);
    inOutFunction_sreeOg_U3->done(grp_fu_196_ap_done);
    inOutFunction_sreeOg_U3->din0(add_ln66_reg_454);
    inOutFunction_sreeOg_U3->din1(grp_fu_196_p1);
    inOutFunction_sreeOg_U3->ce(grp_fu_196_ce);
    inOutFunction_sreeOg_U3->dout(grp_fu_196_p2);
    inOutFunction_mulfYi_U4 = new inOutFunction_mulfYi<1,1,13,11,24>("inOutFunction_mulfYi_U4");
    inOutFunction_mulfYi_U4->din0(mul_ln47_fu_446_p0);
    inOutFunction_mulfYi_U4->din1(trunc_ln47_reg_519);
    inOutFunction_mulfYi_U4->dout(mul_ln47_fu_446_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln66_fu_171_p2);
    sensitive << ( firstNumber );
    sensitive << ( secondNumber );

    SC_METHOD(thread_anode);
    sensitive << ( grp_delay_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_anode_ap_vld);
    sensitive << ( grp_delay_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( grp_delay_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_delay_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_digit);
    sensitive << ( grp_delay_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( zext_ln36_fu_318_p1 );
    sensitive << ( zext_ln42_fu_385_p1 );
    sensitive << ( zext_ln47_fu_437_p1 );
    sensitive << ( zext_ln52_fu_442_p1 );

    SC_METHOD(thread_digit_ap_vld);
    sensitive << ( grp_delay_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_grp_delay_fu_165_ap_start);
    sensitive << ( grp_delay_fu_165_ap_start_reg );

    SC_METHOD(thread_grp_fu_177_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_177_ce);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_grp_fu_177_p1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_191_ap_start);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_fu_191_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_grp_fu_191_p1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_fu_196_ap_start);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_fu_196_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_METHOD(thread_grp_fu_196_p1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_mul_ln42_fu_286_p1);
    sensitive << ( trunc_ln42_reg_493 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_mul_ln42_fu_286_p2);
    sensitive << ( mul_ln42_fu_286_p1 );

    SC_METHOD(thread_mul_ln47_fu_446_p0);
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_mul_ln52_fu_204_p1);
    sensitive << ( add_ln66_reg_454 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_mul_ln52_fu_204_p2);
    sensitive << ( mul_ln52_fu_204_p1 );

    SC_METHOD(thread_select_ln42_1_fu_358_p3);
    sensitive << ( tmp_6_reg_498 );
    sensitive << ( sext_ln42_3_fu_342_p1 );
    sensitive << ( sub_ln42_1_fu_352_p2 );

    SC_METHOD(thread_select_ln42_fu_345_p3);
    sensitive << ( tmp_6_reg_498 );
    sensitive << ( sext_ln42_2_fu_338_p1 );
    sensitive << ( sext_ln42_3_fu_342_p1 );

    SC_METHOD(thread_select_ln47_1_fu_425_p3);
    sensitive << ( tmp_8_reg_524 );
    sensitive << ( sext_ln47_3_fu_409_p1 );
    sensitive << ( sub_ln47_1_fu_419_p2 );

    SC_METHOD(thread_select_ln47_fu_412_p3);
    sensitive << ( tmp_8_reg_524 );
    sensitive << ( sext_ln47_2_fu_405_p1 );
    sensitive << ( sext_ln47_3_fu_409_p1 );

    SC_METHOD(thread_select_ln52_1_fu_255_p3);
    sensitive << ( tmp_11_reg_462 );
    sensitive << ( sext_ln52_3_fu_239_p1 );
    sensitive << ( sub_ln52_1_fu_249_p2 );

    SC_METHOD(thread_select_ln52_fu_242_p3);
    sensitive << ( tmp_11_reg_462 );
    sensitive << ( sext_ln52_2_fu_235_p1 );
    sensitive << ( sext_ln52_3_fu_239_p1 );

    SC_METHOD(thread_sevenSegmentNumbers_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( sext_ln52_fu_262_p1 );
    sensitive << ( sext_ln36_fu_278_p1 );
    sensitive << ( sext_ln42_fu_365_p1 );
    sensitive << ( sext_ln47_fu_432_p1 );

    SC_METHOD(thread_sevenSegmentNumbers_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( grp_delay_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state38 );
    sensitive << ( ap_CS_fsm_state39 );

    SC_METHOD(thread_sext_ln36_fu_278_p1);
    sensitive << ( grp_fu_191_p2 );

    SC_METHOD(thread_sext_ln42_2_fu_338_p1);
    sensitive << ( tmp_7_fu_328_p4 );

    SC_METHOD(thread_sext_ln42_3_fu_342_p1);
    sensitive << ( tmp_reg_514 );

    SC_METHOD(thread_sext_ln42_fu_365_p1);
    sensitive << ( select_ln42_1_fu_358_p3 );

    SC_METHOD(thread_sext_ln47_2_fu_405_p1);
    sensitive << ( tmp_9_fu_395_p4 );

    SC_METHOD(thread_sext_ln47_3_fu_409_p1);
    sensitive << ( tmp_10_reg_540 );

    SC_METHOD(thread_sext_ln47_fu_432_p1);
    sensitive << ( select_ln47_1_fu_425_p3 );

    SC_METHOD(thread_sext_ln52_2_fu_235_p1);
    sensitive << ( tmp_12_fu_225_p4 );

    SC_METHOD(thread_sext_ln52_3_fu_239_p1);
    sensitive << ( tmp_13_reg_473 );

    SC_METHOD(thread_sext_ln52_fu_262_p1);
    sensitive << ( select_ln52_1_reg_478 );

    SC_METHOD(thread_sub_ln42_1_fu_352_p2);
    sensitive << ( select_ln42_fu_345_p3 );

    SC_METHOD(thread_sub_ln42_fu_323_p2);
    sensitive << ( trunc_ln42_1_reg_509 );

    SC_METHOD(thread_sub_ln47_1_fu_419_p2);
    sensitive << ( select_ln47_fu_412_p3 );

    SC_METHOD(thread_sub_ln47_fu_390_p2);
    sensitive << ( trunc_ln47_1_reg_535 );

    SC_METHOD(thread_sub_ln52_1_fu_249_p2);
    sensitive << ( select_ln52_fu_242_p3 );

    SC_METHOD(thread_sub_ln52_fu_220_p2);
    sensitive << ( mul_ln52_reg_468 );

    SC_METHOD(thread_tmp_12_fu_225_p4);
    sensitive << ( sub_ln52_fu_220_p2 );

    SC_METHOD(thread_tmp_7_fu_328_p4);
    sensitive << ( sub_ln42_fu_323_p2 );

    SC_METHOD(thread_tmp_9_fu_395_p4);
    sensitive << ( sub_ln47_fu_390_p2 );

    SC_METHOD(thread_trunc_ln42_1_fu_292_p1);
    sensitive << ( mul_ln42_fu_286_p2 );

    SC_METHOD(thread_trunc_ln42_fu_266_p1);
    sensitive << ( grp_fu_177_p2 );

    SC_METHOD(thread_trunc_ln47_1_fu_373_p1);
    sensitive << ( mul_ln47_fu_446_p2 );

    SC_METHOD(thread_trunc_ln47_fu_306_p1);
    sensitive << ( grp_fu_196_p2 );

    SC_METHOD(thread_zext_ln36_fu_318_p1);
    sensitive << ( sevenSegmentNumbers_q0 );

    SC_METHOD(thread_zext_ln42_fu_385_p1);
    sensitive << ( sevenSegmentNumbers_q0 );

    SC_METHOD(thread_zext_ln47_fu_437_p1);
    sensitive << ( sevenSegmentNumbers_q0 );

    SC_METHOD(thread_zext_ln52_fu_442_p1);
    sensitive << ( sevenSegmentNumbers_7_reg_488 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( grp_delay_fu_165_ap_done );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state41 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000000000000000000000000000001";
    grp_delay_fu_165_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "inOutFunction_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, digit, "(port)digit");
    sc_trace(mVcdFile, digit_ap_vld, "(port)digit_ap_vld");
    sc_trace(mVcdFile, anode, "(port)anode");
    sc_trace(mVcdFile, anode_ap_vld, "(port)anode_ap_vld");
    sc_trace(mVcdFile, firstNumber, "(port)firstNumber");
    sc_trace(mVcdFile, secondNumber, "(port)secondNumber");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, sevenSegmentNumbers_address0, "sevenSegmentNumbers_address0");
    sc_trace(mVcdFile, sevenSegmentNumbers_ce0, "sevenSegmentNumbers_ce0");
    sc_trace(mVcdFile, sevenSegmentNumbers_q0, "sevenSegmentNumbers_q0");
    sc_trace(mVcdFile, add_ln66_fu_171_p2, "add_ln66_fu_171_p2");
    sc_trace(mVcdFile, add_ln66_reg_454, "add_ln66_reg_454");
    sc_trace(mVcdFile, tmp_11_reg_462, "tmp_11_reg_462");
    sc_trace(mVcdFile, mul_ln52_fu_204_p2, "mul_ln52_fu_204_p2");
    sc_trace(mVcdFile, mul_ln52_reg_468, "mul_ln52_reg_468");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_13_reg_473, "tmp_13_reg_473");
    sc_trace(mVcdFile, select_ln52_1_fu_255_p3, "select_ln52_1_fu_255_p3");
    sc_trace(mVcdFile, select_ln52_1_reg_478, "select_ln52_1_reg_478");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, sevenSegmentNumbers_7_reg_488, "sevenSegmentNumbers_7_reg_488");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, trunc_ln42_fu_266_p1, "trunc_ln42_fu_266_p1");
    sc_trace(mVcdFile, trunc_ln42_reg_493, "trunc_ln42_reg_493");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, tmp_6_reg_498, "tmp_6_reg_498");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, grp_delay_fu_165_ap_ready, "grp_delay_fu_165_ap_ready");
    sc_trace(mVcdFile, grp_delay_fu_165_ap_done, "grp_delay_fu_165_ap_done");
    sc_trace(mVcdFile, trunc_ln42_1_fu_292_p1, "trunc_ln42_1_fu_292_p1");
    sc_trace(mVcdFile, trunc_ln42_1_reg_509, "trunc_ln42_1_reg_509");
    sc_trace(mVcdFile, tmp_reg_514, "tmp_reg_514");
    sc_trace(mVcdFile, trunc_ln47_fu_306_p1, "trunc_ln47_fu_306_p1");
    sc_trace(mVcdFile, trunc_ln47_reg_519, "trunc_ln47_reg_519");
    sc_trace(mVcdFile, tmp_8_reg_524, "tmp_8_reg_524");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, trunc_ln47_1_fu_373_p1, "trunc_ln47_1_fu_373_p1");
    sc_trace(mVcdFile, trunc_ln47_1_reg_535, "trunc_ln47_1_reg_535");
    sc_trace(mVcdFile, tmp_10_reg_540, "tmp_10_reg_540");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_delay_fu_165_ap_start, "grp_delay_fu_165_ap_start");
    sc_trace(mVcdFile, grp_delay_fu_165_ap_idle, "grp_delay_fu_165_ap_idle");
    sc_trace(mVcdFile, grp_delay_fu_165_ap_start_reg, "grp_delay_fu_165_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, sext_ln52_fu_262_p1, "sext_ln52_fu_262_p1");
    sc_trace(mVcdFile, sext_ln36_fu_278_p1, "sext_ln36_fu_278_p1");
    sc_trace(mVcdFile, sext_ln42_fu_365_p1, "sext_ln42_fu_365_p1");
    sc_trace(mVcdFile, sext_ln47_fu_432_p1, "sext_ln47_fu_432_p1");
    sc_trace(mVcdFile, zext_ln36_fu_318_p1, "zext_ln36_fu_318_p1");
    sc_trace(mVcdFile, zext_ln42_fu_385_p1, "zext_ln42_fu_385_p1");
    sc_trace(mVcdFile, zext_ln47_fu_437_p1, "zext_ln47_fu_437_p1");
    sc_trace(mVcdFile, zext_ln52_fu_442_p1, "zext_ln52_fu_442_p1");
    sc_trace(mVcdFile, grp_fu_177_p1, "grp_fu_177_p1");
    sc_trace(mVcdFile, grp_fu_191_p1, "grp_fu_191_p1");
    sc_trace(mVcdFile, grp_fu_196_p1, "grp_fu_196_p1");
    sc_trace(mVcdFile, mul_ln52_fu_204_p1, "mul_ln52_fu_204_p1");
    sc_trace(mVcdFile, sub_ln52_fu_220_p2, "sub_ln52_fu_220_p2");
    sc_trace(mVcdFile, tmp_12_fu_225_p4, "tmp_12_fu_225_p4");
    sc_trace(mVcdFile, sext_ln52_2_fu_235_p1, "sext_ln52_2_fu_235_p1");
    sc_trace(mVcdFile, sext_ln52_3_fu_239_p1, "sext_ln52_3_fu_239_p1");
    sc_trace(mVcdFile, select_ln52_fu_242_p3, "select_ln52_fu_242_p3");
    sc_trace(mVcdFile, sub_ln52_1_fu_249_p2, "sub_ln52_1_fu_249_p2");
    sc_trace(mVcdFile, grp_fu_177_p2, "grp_fu_177_p2");
    sc_trace(mVcdFile, grp_fu_191_p2, "grp_fu_191_p2");
    sc_trace(mVcdFile, mul_ln42_fu_286_p1, "mul_ln42_fu_286_p1");
    sc_trace(mVcdFile, mul_ln42_fu_286_p2, "mul_ln42_fu_286_p2");
    sc_trace(mVcdFile, grp_fu_196_p2, "grp_fu_196_p2");
    sc_trace(mVcdFile, sub_ln42_fu_323_p2, "sub_ln42_fu_323_p2");
    sc_trace(mVcdFile, tmp_7_fu_328_p4, "tmp_7_fu_328_p4");
    sc_trace(mVcdFile, sext_ln42_2_fu_338_p1, "sext_ln42_2_fu_338_p1");
    sc_trace(mVcdFile, sext_ln42_3_fu_342_p1, "sext_ln42_3_fu_342_p1");
    sc_trace(mVcdFile, select_ln42_fu_345_p3, "select_ln42_fu_345_p3");
    sc_trace(mVcdFile, sub_ln42_1_fu_352_p2, "sub_ln42_1_fu_352_p2");
    sc_trace(mVcdFile, select_ln42_1_fu_358_p3, "select_ln42_1_fu_358_p3");
    sc_trace(mVcdFile, mul_ln47_fu_446_p2, "mul_ln47_fu_446_p2");
    sc_trace(mVcdFile, sub_ln47_fu_390_p2, "sub_ln47_fu_390_p2");
    sc_trace(mVcdFile, tmp_9_fu_395_p4, "tmp_9_fu_395_p4");
    sc_trace(mVcdFile, sext_ln47_2_fu_405_p1, "sext_ln47_2_fu_405_p1");
    sc_trace(mVcdFile, sext_ln47_3_fu_409_p1, "sext_ln47_3_fu_409_p1");
    sc_trace(mVcdFile, select_ln47_fu_412_p3, "select_ln47_fu_412_p3");
    sc_trace(mVcdFile, sub_ln47_1_fu_419_p2, "sub_ln47_1_fu_419_p2");
    sc_trace(mVcdFile, select_ln47_1_fu_425_p3, "select_ln47_1_fu_425_p3");
    sc_trace(mVcdFile, mul_ln47_fu_446_p0, "mul_ln47_fu_446_p0");
    sc_trace(mVcdFile, grp_fu_177_ap_start, "grp_fu_177_ap_start");
    sc_trace(mVcdFile, grp_fu_177_ap_done, "grp_fu_177_ap_done");
    sc_trace(mVcdFile, grp_fu_177_ce, "grp_fu_177_ce");
    sc_trace(mVcdFile, grp_fu_191_ap_start, "grp_fu_191_ap_start");
    sc_trace(mVcdFile, grp_fu_191_ap_done, "grp_fu_191_ap_done");
    sc_trace(mVcdFile, grp_fu_191_ce, "grp_fu_191_ce");
    sc_trace(mVcdFile, grp_fu_196_ap_start, "grp_fu_196_ap_start");
    sc_trace(mVcdFile, grp_fu_196_ap_done, "grp_fu_196_ap_done");
    sc_trace(mVcdFile, grp_fu_196_ce, "grp_fu_196_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("inOutFunction.hdltvin.dat");
    mHdltvoutHandle.open("inOutFunction.hdltvout.dat");
}

inOutFunction::~inOutFunction() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sevenSegmentNumbers_U;
    delete grp_delay_fu_165;
    delete inOutFunction_srecud_U1;
    delete inOutFunction_sredEe_U2;
    delete inOutFunction_sreeOg_U3;
    delete inOutFunction_mulfYi_U4;
}

void inOutFunction::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_delay_fu_165_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
            grp_delay_fu_165_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_delay_fu_165_ap_ready.read())) {
            grp_delay_fu_165_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        add_ln66_reg_454 = add_ln66_fu_171_p2.read();
        tmp_11_reg_462 = add_ln66_fu_171_p2.read().range(31, 31);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        mul_ln52_reg_468 = mul_ln52_fu_204_p2.read();
        tmp_13_reg_473 = mul_ln52_fu_204_p2.read().range(64, 42);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        select_ln52_1_reg_478 = select_ln52_1_fu_255_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sevenSegmentNumbers_7_reg_488 = sevenSegmentNumbers_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        tmp_10_reg_540 = mul_ln47_fu_446_p2.read().range(23, 18);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        tmp_6_reg_498 = grp_fu_177_p2.read().range(7, 7);
        trunc_ln42_reg_493 = trunc_ln42_fu_266_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1))) {
        tmp_8_reg_524 = grp_fu_196_p2.read().range(10, 10);
        tmp_reg_514 = mul_ln42_fu_286_p2.read().range(17, 12);
        trunc_ln47_reg_519 = trunc_ln47_fu_306_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(tmp_6_reg_498.read(), ap_const_lv1_1))) {
        trunc_ln42_1_reg_509 = trunc_ln42_1_fu_292_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_8_reg_524.read()))) {
        trunc_ln47_1_reg_535 = trunc_ln47_1_fu_373_p1.read();
    }
}

void inOutFunction::thread_add_ln66_fu_171_p2() {
    add_ln66_fu_171_p2 = (!firstNumber.read().is_01() || !secondNumber.read().is_01())? sc_lv<32>(): (sc_biguint<32>(firstNumber.read()) + sc_biguint<32>(secondNumber.read()));
}

void inOutFunction::thread_anode() {
    if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        anode = ap_const_lv8_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        anode = ap_const_lv8_2;
    } else if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        anode = ap_const_lv8_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        anode = ap_const_lv8_8;
    } else {
        anode = "XXXXXXXX";
    }
}

void inOutFunction::thread_anode_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         (esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         (esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())))) {
        anode_ap_vld = ap_const_logic_1;
    } else {
        anode_ap_vld = ap_const_logic_0;
    }
}

void inOutFunction::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void inOutFunction::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void inOutFunction::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void inOutFunction::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void inOutFunction::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void inOutFunction::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void inOutFunction::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void inOutFunction::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void inOutFunction::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void inOutFunction::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void inOutFunction::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void inOutFunction::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void inOutFunction::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void inOutFunction::thread_ap_done() {
    if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void inOutFunction::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void inOutFunction::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void inOutFunction::thread_digit() {
    if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        digit = zext_ln52_fu_442_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        digit = zext_ln47_fu_437_p1.read();
    } else if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        digit = zext_ln42_fu_385_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        digit = zext_ln36_fu_318_p1.read();
    } else {
        digit = "XXXXXXXX";
    }
}

void inOutFunction::thread_digit_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         (esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         (esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())))) {
        digit_ap_vld = ap_const_logic_1;
    } else {
        digit_ap_vld = ap_const_logic_0;
    }
}

void inOutFunction::thread_grp_delay_fu_165_ap_start() {
    grp_delay_fu_165_ap_start = grp_delay_fu_165_ap_start_reg.read();
}

void inOutFunction::thread_grp_fu_177_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_177_ap_start = ap_const_logic_1;
    } else {
        grp_fu_177_ap_start = ap_const_logic_0;
    }
}

void inOutFunction::thread_grp_fu_177_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        grp_fu_177_ce = ap_const_logic_0;
    } else {
        grp_fu_177_ce = ap_const_logic_1;
    }
}

void inOutFunction::thread_grp_fu_177_p1() {
    grp_fu_177_p1 =  (sc_lv<8>) (ap_const_lv32_64);
}

void inOutFunction::thread_grp_fu_191_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_191_ap_start = ap_const_logic_1;
    } else {
        grp_fu_191_ap_start = ap_const_logic_0;
    }
}

void inOutFunction::thread_grp_fu_191_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        grp_fu_191_ce = ap_const_logic_0;
    } else {
        grp_fu_191_ce = ap_const_logic_1;
    }
}

void inOutFunction::thread_grp_fu_191_p1() {
    grp_fu_191_p1 =  (sc_lv<5>) (ap_const_lv32_A);
}

void inOutFunction::thread_grp_fu_196_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        grp_fu_196_ap_start = ap_const_logic_1;
    } else {
        grp_fu_196_ap_start = ap_const_logic_0;
    }
}

void inOutFunction::thread_grp_fu_196_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
        grp_fu_196_ce = ap_const_logic_0;
    } else {
        grp_fu_196_ce = ap_const_logic_1;
    }
}

void inOutFunction::thread_grp_fu_196_p1() {
    grp_fu_196_p1 =  (sc_lv<11>) (ap_const_lv32_3E8);
}

void inOutFunction::thread_mul_ln42_fu_286_p1() {
    mul_ln42_fu_286_p1 = trunc_ln42_reg_493.read();
}

void inOutFunction::thread_mul_ln42_fu_286_p2() {
    mul_ln42_fu_286_p2 = (!ap_const_lv18_19A.is_01() || !mul_ln42_fu_286_p1.read().is_01())? sc_lv<18>(): sc_biguint<18>(ap_const_lv18_19A) * sc_bigint<8>(mul_ln42_fu_286_p1.read());
}

void inOutFunction::thread_mul_ln47_fu_446_p0() {
    mul_ln47_fu_446_p0 =  (sc_lv<13>) (ap_const_lv24_A3E);
}

void inOutFunction::thread_mul_ln52_fu_204_p1() {
    mul_ln52_fu_204_p1 = add_ln66_reg_454.read();
}

void inOutFunction::thread_mul_ln52_fu_204_p2() {
    mul_ln52_fu_204_p2 = (!ap_const_lv65_10624DD30.is_01() || !mul_ln52_fu_204_p1.read().is_01())? sc_lv<65>(): sc_biguint<65>(ap_const_lv65_10624DD30) * sc_bigint<32>(mul_ln52_fu_204_p1.read());
}

void inOutFunction::thread_select_ln42_1_fu_358_p3() {
    select_ln42_1_fu_358_p3 = (!tmp_6_reg_498.read()[0].is_01())? sc_lv<8>(): ((tmp_6_reg_498.read()[0].to_bool())? sub_ln42_1_fu_352_p2.read(): sext_ln42_3_fu_342_p1.read());
}

void inOutFunction::thread_select_ln42_fu_345_p3() {
    select_ln42_fu_345_p3 = (!tmp_6_reg_498.read()[0].is_01())? sc_lv<8>(): ((tmp_6_reg_498.read()[0].to_bool())? sext_ln42_2_fu_338_p1.read(): sext_ln42_3_fu_342_p1.read());
}

void inOutFunction::thread_select_ln47_1_fu_425_p3() {
    select_ln47_1_fu_425_p3 = (!tmp_8_reg_524.read()[0].is_01())? sc_lv<11>(): ((tmp_8_reg_524.read()[0].to_bool())? sub_ln47_1_fu_419_p2.read(): sext_ln47_3_fu_409_p1.read());
}

void inOutFunction::thread_select_ln47_fu_412_p3() {
    select_ln47_fu_412_p3 = (!tmp_8_reg_524.read()[0].is_01())? sc_lv<11>(): ((tmp_8_reg_524.read()[0].to_bool())? sext_ln47_2_fu_405_p1.read(): sext_ln47_3_fu_409_p1.read());
}

void inOutFunction::thread_select_ln52_1_fu_255_p3() {
    select_ln52_1_fu_255_p3 = (!tmp_11_reg_462.read()[0].is_01())? sc_lv<32>(): ((tmp_11_reg_462.read()[0].to_bool())? sub_ln52_1_fu_249_p2.read(): sext_ln52_3_fu_239_p1.read());
}

void inOutFunction::thread_select_ln52_fu_242_p3() {
    select_ln52_fu_242_p3 = (!tmp_11_reg_462.read()[0].is_01())? sc_lv<32>(): ((tmp_11_reg_462.read()[0].to_bool())? sext_ln52_2_fu_235_p1.read(): sext_ln52_3_fu_239_p1.read());
}

void inOutFunction::thread_sevenSegmentNumbers_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        sevenSegmentNumbers_address0 =  (sc_lv<4>) (sext_ln47_fu_432_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read())) {
        sevenSegmentNumbers_address0 =  (sc_lv<4>) (sext_ln42_fu_365_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        sevenSegmentNumbers_address0 =  (sc_lv<4>) (sext_ln36_fu_278_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sevenSegmentNumbers_address0 =  (sc_lv<4>) (sext_ln52_fu_262_p1.read());
    } else {
        sevenSegmentNumbers_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void inOutFunction::thread_sevenSegmentNumbers_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
         (esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())))) {
        sevenSegmentNumbers_ce0 = ap_const_logic_1;
    } else {
        sevenSegmentNumbers_ce0 = ap_const_logic_0;
    }
}

void inOutFunction::thread_sext_ln36_fu_278_p1() {
    sext_ln36_fu_278_p1 = esl_sext<64,32>(grp_fu_191_p2.read());
}

void inOutFunction::thread_sext_ln42_2_fu_338_p1() {
    sext_ln42_2_fu_338_p1 = esl_sext<8,5>(tmp_7_fu_328_p4.read());
}

void inOutFunction::thread_sext_ln42_3_fu_342_p1() {
    sext_ln42_3_fu_342_p1 = esl_sext<8,6>(tmp_reg_514.read());
}

void inOutFunction::thread_sext_ln42_fu_365_p1() {
    sext_ln42_fu_365_p1 = esl_sext<64,8>(select_ln42_1_fu_358_p3.read());
}

void inOutFunction::thread_sext_ln47_2_fu_405_p1() {
    sext_ln47_2_fu_405_p1 = esl_sext<11,5>(tmp_9_fu_395_p4.read());
}

void inOutFunction::thread_sext_ln47_3_fu_409_p1() {
    sext_ln47_3_fu_409_p1 = esl_sext<11,6>(tmp_10_reg_540.read());
}

void inOutFunction::thread_sext_ln47_fu_432_p1() {
    sext_ln47_fu_432_p1 = esl_sext<64,11>(select_ln47_1_fu_425_p3.read());
}

void inOutFunction::thread_sext_ln52_2_fu_235_p1() {
    sext_ln52_2_fu_235_p1 = esl_sext<32,23>(tmp_12_fu_225_p4.read());
}

void inOutFunction::thread_sext_ln52_3_fu_239_p1() {
    sext_ln52_3_fu_239_p1 = esl_sext<32,23>(tmp_13_reg_473.read());
}

void inOutFunction::thread_sext_ln52_fu_262_p1() {
    sext_ln52_fu_262_p1 = esl_sext<64,32>(select_ln52_1_reg_478.read());
}

void inOutFunction::thread_sub_ln42_1_fu_352_p2() {
    sub_ln42_1_fu_352_p2 = (!ap_const_lv8_0.is_01() || !select_ln42_fu_345_p3.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(select_ln42_fu_345_p3.read()));
}

void inOutFunction::thread_sub_ln42_fu_323_p2() {
    sub_ln42_fu_323_p2 = (!ap_const_lv17_0.is_01() || !trunc_ln42_1_reg_509.read().is_01())? sc_lv<17>(): (sc_biguint<17>(ap_const_lv17_0) - sc_biguint<17>(trunc_ln42_1_reg_509.read()));
}

void inOutFunction::thread_sub_ln47_1_fu_419_p2() {
    sub_ln47_1_fu_419_p2 = (!ap_const_lv11_0.is_01() || !select_ln47_fu_412_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_0) - sc_biguint<11>(select_ln47_fu_412_p3.read()));
}

void inOutFunction::thread_sub_ln47_fu_390_p2() {
    sub_ln47_fu_390_p2 = (!ap_const_lv23_0.is_01() || !trunc_ln47_1_reg_535.read().is_01())? sc_lv<23>(): (sc_biguint<23>(ap_const_lv23_0) - sc_biguint<23>(trunc_ln47_1_reg_535.read()));
}

void inOutFunction::thread_sub_ln52_1_fu_249_p2() {
    sub_ln52_1_fu_249_p2 = (!ap_const_lv32_0.is_01() || !select_ln52_fu_242_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(select_ln52_fu_242_p3.read()));
}

void inOutFunction::thread_sub_ln52_fu_220_p2() {
    sub_ln52_fu_220_p2 = (!ap_const_lv65_0.is_01() || !mul_ln52_reg_468.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul_ln52_reg_468.read()));
}

void inOutFunction::thread_tmp_12_fu_225_p4() {
    tmp_12_fu_225_p4 = sub_ln52_fu_220_p2.read().range(64, 42);
}

void inOutFunction::thread_tmp_7_fu_328_p4() {
    tmp_7_fu_328_p4 = sub_ln42_fu_323_p2.read().range(16, 12);
}

void inOutFunction::thread_tmp_9_fu_395_p4() {
    tmp_9_fu_395_p4 = sub_ln47_fu_390_p2.read().range(22, 18);
}

void inOutFunction::thread_trunc_ln42_1_fu_292_p1() {
    trunc_ln42_1_fu_292_p1 = mul_ln42_fu_286_p2.read().range(17-1, 0);
}

void inOutFunction::thread_trunc_ln42_fu_266_p1() {
    trunc_ln42_fu_266_p1 = grp_fu_177_p2.read().range(8-1, 0);
}

void inOutFunction::thread_trunc_ln47_1_fu_373_p1() {
    trunc_ln47_1_fu_373_p1 = mul_ln47_fu_446_p2.read().range(23-1, 0);
}

void inOutFunction::thread_trunc_ln47_fu_306_p1() {
    trunc_ln47_fu_306_p1 = grp_fu_196_p2.read().range(11-1, 0);
}

void inOutFunction::thread_zext_ln36_fu_318_p1() {
    zext_ln36_fu_318_p1 = esl_zext<8,7>(sevenSegmentNumbers_q0.read());
}

void inOutFunction::thread_zext_ln42_fu_385_p1() {
    zext_ln42_fu_385_p1 = esl_zext<8,7>(sevenSegmentNumbers_q0.read());
}

void inOutFunction::thread_zext_ln47_fu_437_p1() {
    zext_ln47_fu_437_p1 = esl_zext<8,7>(sevenSegmentNumbers_q0.read());
}

void inOutFunction::thread_zext_ln52_fu_442_p1() {
    zext_ln52_fu_442_p1 = esl_zext<8,7>(sevenSegmentNumbers_7_reg_488.read());
}

void inOutFunction::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()))) {
                ap_NS_fsm = ap_ST_fsm_state36;
            } else {
                ap_NS_fsm = ap_ST_fsm_state35;
            }
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state38;
            } else {
                ap_NS_fsm = ap_ST_fsm_state37;
            }
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state39;
            }
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            if ((esl_seteq<1,1,1>(grp_delay_fu_165_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<41>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void inOutFunction::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"digit\" :  \"" << digit.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"digit_ap_vld\" :  \"" << digit_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"anode\" :  \"" << anode.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"anode_ap_vld\" :  \"" << anode_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"firstNumber\" :  \"" << firstNumber.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"secondNumber\" :  \"" << secondNumber.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

